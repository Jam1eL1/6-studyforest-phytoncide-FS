generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  name      String
  email     String
  password  String
  createAt  DateTime @default(now())
  updatedAt DateTime @updatedAt
  studies   Study[]  @relation("UserStudies")
  emojis    Emojis[] @relation("UserEmojis")
}

model Study {
  id          Int               @id @default(autoincrement())
  authorId    String
  nickName    String
  title       String
  description String
  password    String?
  background  Study_backgrounds
  point       Int?
  createAt    DateTime          @default(now())
  updatedAt   DateTime          @updatedAt
  author      User              @relation("UserStudies", fields: [authorId], references: [id])
  emojis      Emojis[]          @relation("StudyEmojis")
  focuses     Focus[]           @relation("StudyFocuses")
  habits      Habit[]           @relation("StudyHabits")
}

enum Study_backgrounds {
  bg1
  bg2
  bg3
  bg4
  bg5
  bg6
  bg7
  bg8
}

model Emojis {
  id           Int     @id @default(autoincrement())
  studyId      Int?
  checkUserId  String?
  emojiContent String?
  study        Study?  @relation("StudyEmojis", fields: [studyId], references: [id])
  checkUser    User?   @relation("UserEmojis", fields: [checkUserId], references: [id])
}

model Habit {
  id        Int      @id @default(autoincrement())
  title     String
  monday    Boolean  @default(false)
  tuesday   Boolean  @default(false)
  wednesday Boolean  @default(false)
  thursday  Boolean  @default(false)
  friday    Boolean  @default(false)
  saturday  Boolean  @default(false)
  sunday    Boolean  @default(false)
  createAt  DateTime @default(now())
  updatedAt DateTime @updatedAt
  study     Study    @relation("StudyHabits", fields: [studyId], references: [id])
  studyId   Int
}

model Focus {
  id        Int      @id @default(autoincrement())
  studyId   Int
  complete  Boolean  @default(false)
  createAt  DateTime @default(now())
  updatedAt DateTime @updatedAt
  study     Study    @relation("StudyFocuses", fields: [studyId], references: [id])
}
