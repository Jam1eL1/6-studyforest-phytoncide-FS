generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Study {
  id                Int               @id @default(autoincrement())
  nickName          String            @db.VarChar(10)
  title             String            @db.VarChar(10)
  description       String
  encryptedPassword String
  background        StudyBackgrounds
  point             Int               @default(0) 
  createAt          DateTime          @default(now())
  updatedAt         DateTime          @updatedAt
  emojis            Emojis[]          @relation("StudyEmojis")
  habits            Habit[]           @relation("StudyHabits")
}

enum StudyBackgrounds {
  bg1
  bg2
  bg3
  bg4
  bg5
  bg6
  bg7
  bg8
}

model Emojis {
  id           Int    @id @default(autoincrement())
  studyId      Int
  emojiContent String
  count        Int    @default(0) 
  study        Study  @relation("StudyEmojis", fields: [studyId], references: [id], onDelete: Cascade)
}

model Habit {
  id        Int         @id @default(autoincrement())
  title     String
  createAt  DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  study     Study       @relation("StudyHabits", fields: [studyId], references: [id], onDelete: Cascade)
  studyId   Int
  isDeleted    Boolean     @default(false)
  HabitDone HabitDone[]
}

model HabitDone {
  id        Int      @id @default(autoincrement())
  habitId   Int
  createdAt DateTime @default(now()) @db.Date
  habit     Habit    @relation(fields: [habitId], references: [id], onDelete: Cascade)
}

